define kMaxPresInGasTank 15000 # kpA
define kMaxTemp 130 # C
define kMinRatio 0.01 # 1%
# DEVICES
alias Slider d0 # optional
alias WarningLamp d1 # optional
# REGISTERS
alias warningOn r15
alias oldState r14
alias filterEnable r13
alias maxGasTemp r12
alias typeGas r11
Start:
move typeGas 0
s db Mode 1 # enable for one tick
yield
# Check Gas Output
l r0 db RatioCarbonDioxideOutput
breqz r0 2 # if r1 == 0 then +3 line
move typeGas 1 # Co2
l r0 db RatioNitrogenOutput
breqz r0 2 # if r1 == 0 then +3 line
move typeGas 2 # N2
l r0 db RatioOxygenOutput
breqz r0 2 # if r1 == 0 then +3 line
move typeGas 3 # O2
l r0 db RatioVolatilesOutput
breqz r0 2 # if r1 == 0 then +3 line
move typeGas 4 # H2
l r0 db RatioNitrousOxideOutput
breqz r0 2 # if r1 == 0 then +3 line
move typeGas 5
l r0 db RatioPollutantOutput
breqz r0 2 # if r1 == 0 then +3 line
move typeGas 6
beqz typeGas Start
# contune
s db Open 0
add maxGasTemp kMaxTemp 273.15
# Setting devices
brdns Slider 2
s Slider Lock 1
Main:
yield
l r0 db Open
beqz r0 CheckFilters
# DISABLED SYSTEM
s db Mode 1
s db On 0
yield
j 1 # Initialisation
CheckFilters:
ls r0 db 0 Occupied
ls r1 db 1 Occupied
add r2 r0 r1
max r2 r2 1 
ls r0 db 0 Quantity
ls r1 db 1 Quantity
add r0 r0 r1 # summ, 0-200
div r0 r0 r2 # x / count filters
mul r0 r0 0.01 # x * 0.01
slt r1 r0 0.2 # 1 if x < 20%
SetSlider:
brdns Slider 3 # skip if not connected
s Slider Setting r0 # precent
s Slider On r1 # enable/disable
seqz warningOn r0 # 1 if x == 0

# tank control
# 0 if GasTank.Pressure > kMaxPresInGasTank
l r0 db PressureOutput
slt filterEnable r0 kMaxPresInGasTank
beqz filterEnable SetFilter

# 1 warningOn == 0
seqz filterEnable warningOn 
beqz filterEnable SetFilter

# 0 if DirtyTank.Temp > maxGasTemp
l r0 db TemperatureInput
slt filterEnable r0 maxGasTemp
beqz filterEnable SetFilter

# if pressNotZero
jal GetGasRatio
l filterEnable db Mode
select r1 filterEnable 0 kMinRatio
sgt filterEnable r0 r1
SetFilter:
s db Mode filterEnable
#s db Setting r0

bdseal WarningLamp Warning
j Main

GetGasRatio:
move r0 0
brne typeGas 1 2
l r0 db RatioCarbonDioxideInput
brne typeGas 2 2
l r0 db RatioNitrogenInput
brne typeGas 3 2
l r0 db RatioOxygenInput
brne typeGas 4 2
l r0 db RatioVolatilesInput
brne typeGas 5 2
l r0 db RatioNitrousOxideInput
brne typeGas 6 2
l r0 db RatioPollutantInput
j ra

Warning:
# if (warningOn == 1) { Flicker On }
breqz warningOn 4 # exit if warningOn == 0
move oldState 1
s WarningLamp On 1
j ra
# else if (warningOn == 0 && oldState == 1)
# { Flicker Off; oldState = warningOn }
seqz r0 warningOn # warningOn == 0
seq r1 oldState 1 # oldState == 1
and r0 r0 r1 # r0 = 1 && r1 == 1
beqz r0 ra # exit if r0 == 0
move oldState 0
s WarningLamp On 0
j ra