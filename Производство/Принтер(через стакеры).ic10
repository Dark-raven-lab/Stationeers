alias Stacker1 d0
alias Stacker2 d1
alias Stacker3 d2
alias Print1 d3
alias Print2 d4
alias Print3 d5

alias NeedPieces r15
alias ExportPieces r14

brdns Print1 2
s Print1 ClearMemory 1
brdns Stacker1 2
s Stacker1 On 0

brdns Print2 2
s Print2 ClearMemory 1
brdns Stacker2 2
s Stacker2 On 0

brdns Print3 2
s Print3 ClearMemory 1
brdns Stacker3 2
s Stacker3 On 0

Main:
yield
bdseal Print1 GoPrint1
bdseal Print2 GoPrint2
bdseal Print3 GoPrint3
j Main

GoPrint1:
alias Print d3
alias Stacker d0
j Print

GoPrint2:
alias Print d4
alias Stacker d1
j Print

GoPrint3:
alias Print d5
alias Stacker d2
j Print

Print:
l r0 Print On # Read printer OnOff
beqz r0 Clear # if printer off - exit
l ExportPieces Print ExportCount # Read current count
sgtz r0 ExportPieces # 1 if > 0
s Stacker On r0 # Set OnOff stacker
s Print Lock r0 # block
l NeedPieces Stacker Setting # Read expected
blt ExportPieces NeedPieces ra # exit if cur < exp
s Print Activate 0 # Disable working
s Stacker Lock 1 # block
l r0 Stacker ImportCount
blt r0 NeedPieces ra # wating do curent < NeedPieces
yield
s Stacker Activate 1 # Give
yield
s Print On 0
s Stacker On 0
Clear:
s Stacker ClearMemory 1
s Print ClearMemory 1
s Print Lock 0
s Stacker Lock 0
j ra