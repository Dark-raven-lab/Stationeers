define precentGeneratorsOn 0.1
define precentGeneratorsOff 0.5
# 1 tick = 0.5 sec
define timeUpdateDisplay 10 # tick
define turningBeaconOnceIn 20 # tick
define beaconDurationOfWork 6 # tick

alias sensor d0 # optional
alias display d1 # optional
alias beacon d2 # optional

alias counter r15
alias genEnable r14
alias oldCharge r13
alias currentCharge r12
alias maxCharge r11
alias batteryPercent r10
alias counterDisplay r9

# CONSTATNS
define GREEN 2
define ORANGE 3
define RED 4
define BATTERYLARGE -1388288459
define BATTERYSMALL -400115994
define SOLARHEAVY -934345724
define SOLARHEAVYDUAL -1545574413
define SOLARPANEL -2045627372
define SOLARPANELDUAL -539224550
define GENERATORCOAL 813146305
define GENERATORGAS 1165997963

start:
yield
# Alig Panels
bdseal sensor UpdateSolarPanel
# Check Power:
lb r0 BATTERYSMALL Charge Sum
lb r1 BATTERYLARGE Charge Sum
add currentCharge r0 r1 # charge = small + large batters
lb r0 BATTERYSMALL Maximum Sum
lb r1 BATTERYLARGE Maximum Sum
add maxCharge r0 r1 # max charge = small + large batters
div batteryPercent currentCharge maxCharge # calculate precent
s db Setting batteryPercent
# Generators
select r0 genEnable precentGeneratorsOff precentGeneratorsOn # if generators was enabled, then charge < min
slt genEnable batteryPercent r0 # 1 x < y
sb GENERATORCOAL On genEnable
sb GENERATORGAS On genEnable
bdseal display SetDisplay # optional
bdseal beacon BeaconPower # optional
j start

UpdateSolarPanel:

j ra

SetDisplay:
sub r0 currentCharge oldCharge #
move oldCharge currentCharge
sgez r1 r0 # 1 if >= 0
select r1 r1 GREEN ORANGE #   >= 0,    ,
select r1 genEnable RED r1 #    ,
s display Color r1
add counterDisplay counterDisplay 1 #
mul r1 timeUpdateDisplay 2 #
sge r1 counterDisplay r1 # >=
select counterDisplay r1 0 counterDisplay #    >=
sle r1 counterDisplay timeUpdateDisplay #  ,
select r2 r1 1 2 # 1 , 2
s display Mode r2
select r2 r1 batteryPercent r0
s display Setting r2
j ra

BeaconPower: # 1 tick = 0.5 sec
add counter counter 1 # counter + 1
blt counter turningBeaconOnceIn ra # exit if counter < turningBeaconOnceIn
add r0 turningBeaconOnceIn beaconDurationOfWork # turningBeaconOnceIn + beaconDurationOfWork
sle r1 counter r0 # if <= max
s beacon On r1
bnez r1 ra # wating
move counter 0
j ra