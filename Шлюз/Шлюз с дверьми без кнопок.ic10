# SETTINGS
define kAccuracyPressure 1 # Early opening ratio
define kExceedingPressure 1.1 # AirVent pressure increase coefficient
define kSkipInternalPressurization 0 # Skip pressurization stage
define kSkipExternalPressurization 0 # Skip pressurization stage
# REQUIRED DEVICES
alias DoorInt d0
alias DoorExt d1
alias Led d2 # OPTIONAL
alias OccupancySensor d3 # OPTIONAL
define kSlider 576516101 # LED SLIDERS (for visible pressure)
define kGasSensor -1252983604 # GAS SENSORS
define kToggleButton 491845673 # TOGGLE BUTTONS
define kHashAirVent -1129453144 # AIR VENTS
# NAMES
define kHashNameVentExt HASH("Ext.Active Vent")
define kHashNameVentInt HASH("Int.Active Vent")
# OPTIONAL DEVICES
define kFlickerLamp -1535893860 # FLICKERS LAMP
define kSpeaker -828056979 # SKEACKERS
# REGISTERS
alias pressInt r15
alias pressExt r14
alias pressOut r13
alias airlookState r12
alias rFrontAirHashName r10
alias rBackAirHashName r9
alias rEnable r8
alias rSensorState r7
s DoorInt Mode 1 # Set logic mode
s DoorExt Mode 1 # Set logic mode
Init:
move rEnable 0
s DoorInt Open airlookState
s DoorExt On airlookState
seqz r1 airlookState # invert state
s DoorExt Open r1
sleep 1
jal ToggleDevices
s DoorInt On r1
Loop:
yield
s db Setting airlookState
lb rEnable kToggleButton Activate Maximum
brdns OccupancySensor 6 # Sensor not found
l r1 OccupancySensor Activate
breq r1 rSensorState 4 # State not changed
move rSensorState r1 # Save new state
sgtz r1 r1 # Binary check
max rEnable rEnable r1
beqz rEnable Loop
beq airlookState 0 GoToInt
GoToExt:
lb pressInt kGasSensor Pressure Maximum # Save pressure
select pressOut kSkipExternalPressurization 0 pressExt
alias DoorBack d0 # interoir door
alias DoorFront d1 # exterior door
j AirlockStart
GoToInt:
lb pressExt kGasSensor Pressure Maximum # Save pressure
select pressOut kSkipInternalPressurization 0 pressInt
alias DoorBack d1 # exterior door
alias DoorFront d0 # interoir door
AirlockStart:
sb kSpeaker Mode 9
select rFrontAirHashName airlookState kHashNameVentExt kHashNameVentInt
select rBackAirHashName airlookState kHashNameVentInt kHashNameVentExt
AirlockMain:
jal ToggleDevices
s DoorBack On 1
s DoorBack Open 0 # close door
s DoorFront Lock 1
sleep 1 # wait close door
jal AirlockCycle
s DoorFront Open 1
sleep 1 # wait open door
s DoorBack On 1
s DoorFront On 0
s DoorFront Setting 0
j Loop
AirlockCycle:
lb r1 kGasSensor Pressure Maximum
sbn kHashAirVent rBackAirHashName Mode 1 # Set depressure mode
sbn kHashAirVent rBackAirHashName On 1 # Enable decompression
WaitDecompression:
yield
lb r0 kToggleButton Activate Maximum # check skip stage
beq r0 1 Init # If out want open-go next
lb r2 kGasSensor Pressure Maximum # check pressure
div r0 r2 r1
sb kSlider Setting r0
bgtz r2 WaitDecompression # if press != 0 retern
Pressurization:
s DoorBack On 0
s DoorFront Lock 1
seqz airlookState airlookState # invert state
sbn kHashAirVent rBackAirHashName On 0 # STOP DEPRESSURE
beqz pressOut StopPressurization
sbn kHashAirVent rFrontAirHashName Mode 0 # Set pressurize mode
sbn kHashAirVent rFrontAirHashName On 1 # Enable pressurizing
WaitPressurization:
yield
lb r0 kToggleButton Activate Maximum # check skip stage
beq r0 1 StopPressurization # If door out was open - exit
mul r0 pressOut kExceedingPressure # Calculate boost pressure
sbn kHashAirVent rFrontAirHashName PressureExternal r0
lb r2 kGasSensor Pressure Minimum
mul r1 pressOut kAccuracyPressure # Wait pressure
div r0 r2 r1
sb kSlider Setting r0
blt r2 r1 WaitPressurization
StopPressurization:
move rEnable 0
ToggleDevices:
sb kHashAirVent On 0
sb kHashAirVent Lock rEnable # lock / unlock AirVent
sb kFlickerLamp On rEnable # enable / disable Flash Light
sb kSpeaker On rEnable # enable / disable Speaker
sb kSlider On rEnable # enable / disable Sliders
brdns Led 3 # enable lamp if connected
select r0 rEnable Color.Red Color.Orange
s Led Color r0
j ra